<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Dart</name>
    </assembly>
    <members>
        <member name="T:Dart.Common.Commands.EventArgs`1">
            <summary></summary>
            <typeparam name="T"></typeparam>
            <seealso cref="T:System.EventArgs" />
        </member>
        <member name="M:Dart.Common.Commands.EventArgs`1.#ctor(`0)">
            <summary>
               Initializes a new instance of the <see cref="T:Dart.Common.Commands.EventArgs`1" /> class.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="P:Dart.Common.Commands.EventArgs`1.Value">
            <summary>Gets the value.</summary>
            <value>The value.</value>
        </member>
        <member name="T:Dart.Common.Commands.EventRaiser">
            <summary>The event raiser.</summary>
        </member>
        <member name="M:Dart.Common.Commands.EventRaiser.Raise(System.EventHandler,System.Object)">
            <summary>Raises the specified sender.</summary>
            <param name="handler">The handler.</param>
            <param name="sender">The sender.</param>
        </member>
        <member name="M:Dart.Common.Commands.EventRaiser.Raise``1(System.EventHandler{Dart.Common.Commands.EventArgs{``0}},System.Object,``0)">
            <summary>Raises the specified sender.</summary>
            <typeparam name="T"></typeparam>
            <param name="handler">The handler.</param>
            <param name="sender">The sender.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:Dart.Common.Commands.EventRaiser.Raise``1(System.EventHandler{``0},System.Object,``0)">
            <summary>Raises the specified sender.</summary>
            <typeparam name="T"></typeparam>
            <param name="handler">The handler.</param>
            <param name="sender">The sender.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:Dart.Common.Commands.EventRaiser.Raise``1(System.EventHandler{Dart.Common.Commands.EventArgs{``0}},System.Object,Dart.Common.Commands.EventArgs{``0})">
            <summary>Raises the specified sender.</summary>
            <typeparam name="T"></typeparam>
            <param name="handler">The handler.</param>
            <param name="sender">The sender.</param>
            <param name="value">
               The <see cref="T:Dart.Common.Commands.EventArgs`1" /> instance containing the event data.
            </param>
        </member>
        <member name="T:Dart.Common.Commands.GenericRelayCommand`1">
            <summary>The GenericRelayCommand.</summary>
            <typeparam name="T">The parameter T.</typeparam>
            <seealso cref="T:System.Windows.Input.ICommand" />
        </member>
        <member name="F:Dart.Common.Commands.GenericRelayCommand`1.canExecute">
            <summary>The can execute.</summary>
        </member>
        <member name="F:Dart.Common.Commands.GenericRelayCommand`1.execute">
            <summary>The execute.</summary>
        </member>
        <member name="M:Dart.Common.Commands.GenericRelayCommand`1.#ctor(System.Action{`0})">
            <summary>
               Initializes a new instance of the <see cref="T:Dart.Common.Commands.GenericRelayCommand`1" /> class.
            </summary>
            <param name="execute">The execute.</param>
        </member>
        <member name="M:Dart.Common.Commands.GenericRelayCommand`1.#ctor(System.Action{`0},System.Func{System.Boolean})">
            <summary>
               Initializes a new instance of the <see cref="T:Dart.Common.Commands.GenericRelayCommand`1" /> class.
            </summary>
            <param name="execute">The action to execute.</param>
            <param name="canExecute">The can execute function.</param>
        </member>
        <member name="M:Dart.Common.Commands.GenericRelayCommand`1.Finalize">
            <summary>
               Finalizes an instance of the <see cref="T:Dart.Common.Commands.GenericRelayCommand`1" /> class.
            </summary>
        </member>
        <member name="E:Dart.Common.Commands.GenericRelayCommand`1.CanExecuteChanged">
            <summary>
               Occurs when changes occur that affect whether or not the command should execute.
            </summary>
        </member>
        <member name="M:Dart.Common.Commands.GenericRelayCommand`1.CanExecute(System.Object)">
            <summary>
               Defines the method that determines whether the command can execute in its current
               state.
            </summary>
            <param name="parameter">
               Data used by the command. If the command does not require data to be passed, this
               object can be set to null.
            </param>
            <returns>true if this command can be executed; otherwise, false.</returns>
        </member>
        <member name="M:Dart.Common.Commands.GenericRelayCommand`1.Execute(System.Object)">
            <summary>Defines the method to be called when the command is invoked.</summary>
            <param name="parameter">
               Data used by the command. If the command does not require data to be passed, this
               object can be set to null.
            </param>
        </member>
        <member name="M:Dart.Common.Commands.GenericRelayCommand`1.RaiseCanExecuteChanged">
            <summary>Raises the can execute changed.</summary>
        </member>
        <member name="M:Dart.Common.Commands.GenericRelayCommand`1.RemoveCommand">
            <summary>Removes the command.</summary>
        </member>
        <member name="T:Dart.Common.Commands.RelayCommand`1">
            <summary>The relay command.</summary>
            <typeparam name="T"></typeparam>
            <seealso cref="T:System.Windows.Input.ICommand" />
        </member>
        <member name="M:Dart.Common.Commands.RelayCommand`1.#ctor(System.Action{`0})">
            <summary>
               Initializes a new instance of the <see cref="T:Dart.Common.Commands.RelayCommand`1" /> class.
            </summary>
            <param name="execute">The execute.</param>
        </member>
        <member name="M:Dart.Common.Commands.RelayCommand`1.#ctor(System.Action{`0},System.Predicate{`0})">
            <summary>
               Initializes a new instance of the <see cref="T:Dart.Common.Commands.RelayCommand`1" /> class.
            </summary>
            <param name="execute">The execute.</param>
            <param name="canExecute">The can execute.</param>
            <exception cref="T:System.ArgumentNullException">execute</exception>
        </member>
        <member name="E:Dart.Common.Commands.RelayCommand`1.CanExecuteChanged">
            <summary>
               Occurs when changes occur that affect whether or not the command should execute.
            </summary>
        </member>
        <member name="M:Dart.Common.Commands.RelayCommand`1.CanExecute(System.Object)">
            <summary>
               Defines the method that determines whether the command can execute in its current
               state.
            </summary>
            <param name="parameter">
               Data used by the command. If the command does not require data to be passed, this
               object can be set to <see langword="null" />.
            </param>
            <returns>
               <see langword="true" /> if this command can be executed; otherwise, <see
               langword="false" />.
            </returns>
        </member>
        <member name="M:Dart.Common.Commands.RelayCommand`1.Execute(System.Object)">
            <summary>Defines the method to be called when the command is invoked.</summary>
            <param name="parameter">
               Data used by the command. If the command does not require data to be passed, this
               object can be set to <see langword="null" />.
            </param>
        </member>
        <member name="T:Dart.Common.Commands.RelayCommand">
            <summary></summary>
            <seealso cref="T:System.Windows.Input.ICommand" />
        </member>
        <member name="M:Dart.Common.Commands.RelayCommand.#ctor(System.Action{System.Object})">
            <summary>
               Initializes a new instance of the <see cref="T:Dart.Common.Commands.RelayCommand" /> class.
            </summary>
            <param name="execute">The execute.</param>
        </member>
        <member name="M:Dart.Common.Commands.RelayCommand.#ctor(System.Action{System.Object},System.Predicate{System.Object})">
            <summary>
               Initializes a new instance of the <see cref="T:Dart.Common.Commands.RelayCommand" /> class.
            </summary>
            <param name="execute">The execute.</param>
            <param name="canExecute">The can execute.</param>
            <exception cref="T:System.ArgumentNullException">execute</exception>
        </member>
        <member name="E:Dart.Common.Commands.RelayCommand.CanExecuteChanged">
            <summary>
               Occurs when changes occur that affect whether or not the command should execute.
            </summary>
        </member>
        <member name="M:Dart.Common.Commands.RelayCommand.CanExecute(System.Object)">
            <summary>
               Defines the method that determines whether the command can execute in its current
               state.
            </summary>
            <param name="parameter">
               Data used by the command. If the command does not require data to be passed, this
               object can be set to <see langword="null" />.
            </param>
            <returns>
               <see langword="true" /> if this command can be executed; otherwise, <see
               langword="false" />.
            </returns>
        </member>
        <member name="M:Dart.Common.Commands.RelayCommand.Execute(System.Object)">
            <summary>Defines the method to be called when the command is invoked.</summary>
            <param name="parameter">
               Data used by the command. If the command does not require data to be passed, this
               object can be set to <see langword="null" />.
            </param>
        </member>
        <member name="M:Dart.Common.Commands.RelayCommand.RaiseCanExecuteChanged">
            <summary>Raises the can execute changed.</summary>
        </member>
        <member name="T:Dart.Common.Commands.SimpleCommandManager">
            <summary>The simple command manager.</summary>
        </member>
        <member name="M:Dart.Common.Commands.SimpleCommandManager.AddRaiseCanExecuteChangedAction(System.Action@)">
            <summary>Adds the raise can execute changed action.</summary>
            <param name="raiseCanExecuteChangedAction">
               The raise can execute changed action.
            </param>
        </member>
        <member name="M:Dart.Common.Commands.SimpleCommandManager.RemoveRaiseCanExecuteChangedAction(System.Action)">
            <summary>Removes the raise can execute changed action.</summary>
            <param name="raiseCanExecuteChangedAction">
               The raise can execute changed action.
            </param>
        </member>
        <member name="T:Dart.Common.ServiceContainer">
            <summary>The container to get public services.</summary>
        </member>
        <member name="M:Dart.Common.ServiceContainer.GetContainer">
            <summary>Gets the container.</summary>
            <returns>The build container instance.</returns>
        </member>
        <member name="T:Dart.Common.Splashscreen.SplashScreen">
            <summary>The splash screen.</summary>
        </member>
        <member name="M:Dart.Common.Splashscreen.SplashScreen.HideSplashScreen(System.Boolean)">
            <summary>Hides the splash screen.</summary>
            <param name="immediately">if set to <c>true</c> [immediately].</param>
        </member>
        <member name="M:Dart.Common.Splashscreen.SplashScreen.ShowSplashScreen">
            <summary>Shows the splash screen.</summary>
        </member>
        <member name="M:Dart.Common.Splashscreen.SplashScreen.UpdateProgress(System.String)">
            <summary>Updates the progress information.</summary>
            <param name="progressInfoText">The progress information text.</param>
        </member>
        <member name="T:Dart.Common.Splashscreen.SplashScreenWindow">
            <summary>Interaction logic for SplashScreenWindow.xaml.</summary>
            <summary>
            SplashScreenWindow
            </summary>
        </member>
        <member name="M:Dart.Common.Splashscreen.SplashScreenWindow.#ctor">
            <summary>
               Initializes a new instance of the <see cref="T:Dart.Common.Splashscreen.SplashScreenWindow" /> class.
            </summary>
        </member>
        <member name="M:Dart.Common.Splashscreen.SplashScreenWindow.StartClose(System.Boolean)">
            <summary>Starts the close.</summary>
            <param name="immediate">if set to <c>true</c> [immediate].</param>
        </member>
        <member name="M:Dart.Common.Splashscreen.SplashScreenWindow.UpdateProgress(System.String)">
            <summary>Updates the progress.</summary>
            <param name="progressText">The progress text.</param>
        </member>
        <member name="M:Dart.Common.Splashscreen.SplashScreenWindow.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Dart.Common.Theme.INamedTheme">
            <summary>The theme with an to string method.</summary>
        </member>
        <member name="P:Dart.Common.Theme.INamedTheme.DisplayName">
            <summary>Gets the display name.</summary>
            <value>The display name.</value>
        </member>
        <member name="P:Dart.Common.Theme.INamedTheme.OriginalTheme">
            <summary>Gets the original theme.</summary>
            <value>The original theme.</value>
        </member>
        <member name="M:Dart.Common.Theme.INamedTheme.ToString">
            <summary>Converts to string.</summary>
            <returns>A <see cref="T:System.String"/> that represents this instance.</returns>
        </member>
        <member name="T:Dart.Common.Theme.NamedTheme">
            <summary>The named theme.</summary>
            <seealso cref="T:Dart.Common.Theme.INamedTheme"/>
        </member>
        <member name="M:Dart.Common.Theme.NamedTheme.#ctor(ControlzEx.Theming.Theme)">
            <summary>Initializes a new instance of the <see cref="T:Dart.Common.Theme.NamedTheme"/> class.</summary>
            <param name="theme">The theme.</param>
        </member>
        <member name="P:Dart.Common.Theme.NamedTheme.DisplayName">
            <summary>Gets the display name.</summary>
            <value>The display name.</value>
        </member>
        <member name="P:Dart.Common.Theme.NamedTheme.OriginalTheme">
            <summary>Gets the original theme.</summary>
            <value>The original theme.</value>
        </member>
        <member name="M:Dart.Common.Theme.NamedTheme.op_Inequality(Dart.Common.Theme.NamedTheme,Dart.Common.Theme.INamedTheme)">
            <summary>Implements the operator !=.</summary>
            <param name="one">The one.</param>
            <param name="two">The two.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Dart.Common.Theme.NamedTheme.op_Equality(Dart.Common.Theme.NamedTheme,Dart.Common.Theme.INamedTheme)">
            <summary>Implements the operator ==.</summary>
            <param name="one">The one.</param>
            <param name="two">The two.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Dart.Common.Theme.NamedTheme.Equals(Dart.Common.Theme.INamedTheme)">
            <summary>Indicates whether the current object is equal to another object of the same type.</summary>
            <param name="other">An object to compare with this object.</param>
            <returns>true if the current object is equal to the <paramref name="other"/> parameter; otherwise, false.</returns>
        </member>
        <member name="M:Dart.Common.Theme.NamedTheme.Equals(System.Object)">
            <summary>Determines whether the specified <see cref="T:System.Object"/>, is equal to this instance.</summary>
            <param name="other">The <see cref="T:System.Object"/> to compare with this instance.</param>
            <returns><c>true</c> if the specified <see cref="T:System.Object"/> is equal to this instance; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Dart.Common.Theme.NamedTheme.GetHashCode">
            <summary>Returns a hash code for this instance.</summary>
            <returns>A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table.</returns>
        </member>
        <member name="M:Dart.Common.Theme.NamedTheme.ToString">
            <summary>Converts to string.</summary>
            <returns>A <see cref="T:System.String"/> that represents this instance.</returns>
        </member>
        <member name="T:Dart.Common.UserInterface.Converter.BitmapToImageSourceConverter">
            <summary>The bitmap to image converter.</summary>
            <seealso cref="T:System.Windows.Data.IValueConverter" />
        </member>
        <member name="M:Dart.Common.UserInterface.Converter.BitmapToImageSourceConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>Converts a value.</summary>
            <param name="value">The value produced by the binding source.</param>
            <param name="targetType">The type of the binding target property.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the converter.</param>
            <returns>
               A converted value. If the method returns null, the valid null value is used.
            </returns>
        </member>
        <member name="M:Dart.Common.UserInterface.Converter.BitmapToImageSourceConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>Converts a value.</summary>
            <param name="value">The value that is produced by the binding target.</param>
            <param name="targetType">The type to convert to.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the converter.</param>
            <returns>
               A converted value. If the method returns null, the valid null value is used.
            </returns>
        </member>
        <member name="T:Dart.Common.UserInterface.Converter.ListToVisibilityConverter">
            <summary>The ListToVisibilityConverter.</summary>
            <seealso cref="T:System.Windows.Data.IValueConverter" />
        </member>
        <member name="M:Dart.Common.UserInterface.Converter.ListToVisibilityConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>Converts a value.</summary>
            <param name="value">The value produced by the binding source.</param>
            <param name="targetType">The type of the binding target property.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the converter.</param>
            <returns>
               A converted value. If the method returns null, the valid null value is used.
            </returns>
        </member>
        <member name="M:Dart.Common.UserInterface.Converter.ListToVisibilityConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>Converts a value.</summary>
            <param name="value">The value that is produced by the binding target.</param>
            <param name="targetType">The type to convert to.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the converter.</param>
            <returns>
               A converted value. If the method returns null, the valid null value is used.
            </returns>
        </member>
        <member name="T:Dart.Common.UserInterface.Converter.SvgToImageSourceConverter">
            <summary>The bitmap to image converter.</summary>
            <seealso cref="T:System.Windows.Data.IValueConverter" />
        </member>
        <member name="M:Dart.Common.UserInterface.Converter.SvgToImageSourceConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>Converts a value.</summary>
            <param name="value">The value produced by the binding source.</param>
            <param name="targetType">The type of the binding target property.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the converter.</param>
            <returns>
               A converted value. If the method returns null, the valid null value is used.
            </returns>
        </member>
        <member name="M:Dart.Common.UserInterface.Converter.SvgToImageSourceConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>Converts a value.</summary>
            <param name="value">The value that is produced by the binding target.</param>
            <param name="targetType">The type to convert to.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the converter.</param>
            <returns>
               A converted value. If the method returns null, the valid null value is used.
            </returns>
        </member>
        <member name="T:Dart.Common.UserInterface.Converter.SvgToJpegConverter">
            <summary>The bitmap to image converter.</summary>
            <seealso cref="T:System.Windows.Data.IValueConverter" />
        </member>
        <member name="M:Dart.Common.UserInterface.Converter.SvgToJpegConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>Converts a value.</summary>
            <param name="value">The value produced by the binding source.</param>
            <param name="targetType">The type of the binding target property.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the converter.</param>
            <returns>
               A converted value. If the method returns null, the valid null value is used.
            </returns>
        </member>
        <member name="M:Dart.Common.UserInterface.Converter.SvgToJpegConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>Converts a value.</summary>
            <param name="value">The value that is produced by the binding target.</param>
            <param name="targetType">The type to convert to.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the converter.</param>
            <returns>
               A converted value. If the method returns null, the valid null value is used.
            </returns>
        </member>
        <member name="T:Dart.Common.UserInterface.Converter.ViewModelTypeToVisibilityConverter">
            <summary>The ViewModelTypeToVisibilityConverter.</summary>
            <seealso cref="T:System.Windows.Data.IValueConverter" />
        </member>
        <member name="M:Dart.Common.UserInterface.Converter.ViewModelTypeToVisibilityConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>Converts a value.</summary>
            <param name="value">The value produced by the binding source.</param>
            <param name="targetType">The type of the binding target property.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the converter.</param>
            <returns>
               A converted value. If the method returns null, the valid null value is used.
            </returns>
        </member>
        <member name="M:Dart.Common.UserInterface.Converter.ViewModelTypeToVisibilityConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>Converts a value.</summary>
            <param name="value">The value that is produced by the binding target.</param>
            <param name="targetType">The type to convert to.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the converter.</param>
            <returns>
               A converted value. If the method returns null, the valid null value is used.
            </returns>
        </member>
        <member name="P:Dart.Common.UserInterface.Helper.DartBoardVariables.InnerBullsEyeRadius">
            <summary>Gets the inner bulls eye radius.</summary>
            <value>The inner bulls eye radius.</value>
        </member>
        <member name="P:Dart.Common.UserInterface.Helper.DartBoardVariables.OuterBullsEyeRadius">
            <summary>Gets the points to outer bull.</summary>
            <value>The points to outer bull.</value>
        </member>
        <member name="P:Dart.Common.UserInterface.Helper.DartBoardVariables.PointsToInnerDouble">
            <summary>Gets the points to inner double.</summary>
            <value>The points to inner double.</value>
        </member>
        <member name="P:Dart.Common.UserInterface.Helper.DartBoardVariables.PointsToInnerTriple">
            <summary>Gets the points to inner triple.</summary>
            <value>The points to inner triple.</value>
        </member>
        <member name="P:Dart.Common.UserInterface.Helper.DartBoardVariables.PointsToOuterDouble">
            <summary>Gets the points to outer double.</summary>
            <value>The points to outer double.</value>
        </member>
        <member name="P:Dart.Common.UserInterface.Helper.DartBoardVariables.PointsToOuterTriple">
            <summary>Gets the points to outer triple.</summary>
            <value>The points to outer triple.</value>
        </member>
        <member name="T:Dart.Common.UserInterface.Helper.ItemsChangeObservableCollection`1">
            <summary>The ItemsChangeObservableCollection.</summary>
            <typeparam name="T">The T.</typeparam>
            <seealso cref="T:System.Collections.ObjectModel.ObservableCollection`1" />
        </member>
        <member name="M:Dart.Common.UserInterface.Helper.ItemsChangeObservableCollection`1.ClearItems">
            <summary>Clears the items.</summary>
        </member>
        <member name="M:Dart.Common.UserInterface.Helper.ItemsChangeObservableCollection`1.OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>Raises the <see cref="E:CollectionChanged" /> event.</summary>
            <param name="e">
               The <see cref="T:System.Collections.Specialized.NotifyCollectionChangedEventArgs" /> instance containing the event
               data.
            </param>
        </member>
        <member name="M:Dart.Common.UserInterface.Helper.ItemsChangeObservableCollection`1.Item_PropertyChanged(System.Object,System.ComponentModel.PropertyChangedEventArgs)">
            <summary>Handles the PropertyChanged event of the Item control.</summary>
            <param name="sender">The source of the event.</param>
            <param name="e">
               The <see cref="T:System.ComponentModel.PropertyChangedEventArgs" /> instance containing the event data.
            </param>
        </member>
        <member name="M:Dart.Common.UserInterface.Helper.ItemsChangeObservableCollection`1.RegisterPropertyChanged(System.Collections.IList)">
            <summary>Registers the property changed.</summary>
            <param name="items">The items.</param>
        </member>
        <member name="M:Dart.Common.UserInterface.Helper.ItemsChangeObservableCollection`1.UnRegisterPropertyChanged(System.Collections.IList)">
            <summary>Use the register property changed.</summary>
            <param name="items">The items.</param>
        </member>
        <member name="T:Dart.Common.UserInterface.Helper.NotifyPropertyChanged">
            <summary>The NotifyPropertyChanged.</summary>
            <seealso cref="T:System.ComponentModel.INotifyPropertyChanged" />
        </member>
        <member name="E:Dart.Common.UserInterface.Helper.NotifyPropertyChanged.PropertyChanged">
            <summary>Occurs when [property changed].</summary>
        </member>
        <member name="M:Dart.Common.UserInterface.Helper.NotifyPropertyChanged.RaisePropertyChanged(System.String)">
            <summary>Raises the property changed.</summary>
            <param name="propertyName">Name of the property.</param>
        </member>
        <member name="T:Dart.Common.UserInterface.PlugInsDialog.PlugInsDialog">
            <summary>Interaction logic for PlugInsDialog.xaml</summary>
            <summary>
            PlugInsDialog
            </summary>
        </member>
        <member name="M:Dart.Common.UserInterface.PlugInsDialog.PlugInsDialog.#ctor(System.Collections.Generic.IEnumerable{Schuermann.Darts.Environment.Extensibility.IPlugIn})">
            <summary>Initializes a new instance of the <see cref="T:Dart.Common.UserInterface.PlugInsDialog.PlugInsDialog" /> class.</summary>
            <param name="plugIns">The plug ins.</param>
        </member>
        <member name="M:Dart.Common.UserInterface.PlugInsDialog.PlugInsDialog.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="M:Dart.Common.Utils.KeyboardUtils.IsCtrlPressed">
            <summary>Determines whether [is control pressed].</summary>
            <returns><c>true</c> if [is control pressed]; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Dart.Common.Utils.KeyboardUtils.IsNumberPressed(System.Int32)">
            <summary>Determines whether [is number pressed] [the specified number].</summary>
            <param name="number">The number.</param>
            <returns>
               <c>true</c> if [is number pressed] [the specified number]; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Dart.Common.Utils.KeyboardUtils.IsShiftPressed">
            <summary>Determines whether [is shift pressed].</summary>
            <returns><c>true</c> if [is shift pressed]; otherwise, <c>false</c>.</returns>
        </member>
        <member name="T:Dart.DartBoardConstants">
            <summary>The Store.</summary>
        </member>
        <member name="P:Dart.DartBoardConstants.AngleBetween10And15">
            <summary>Gets the angle between 10 and 15.</summary>
            <value>The angle between 10 and 15.</value>
        </member>
        <member name="P:Dart.DartBoardConstants.AngleBetween11And14">
            <summary>Gets the angle between 11 and 14.</summary>
            <value>The angle between 11 and 14.</value>
        </member>
        <member name="P:Dart.DartBoardConstants.AngleBetween12And5">
            <summary>Gets the angle between 12 and 5.</summary>
            <value>The angle between 12 and 5.</value>
        </member>
        <member name="P:Dart.DartBoardConstants.AngleBetween13And6">
            <summary>Gets the angle between 13 and 6.</summary>
            <value>The angle between 13 and 6.</value>
        </member>
        <member name="P:Dart.DartBoardConstants.AngleBetween14And9">
            <summary>Gets the angle between 14 and9.</summary>
            <value>The angle between 14 and 9.</value>
        </member>
        <member name="P:Dart.DartBoardConstants.AngleBetween15And2">
            <summary>Gets the angle between 15 and 2.</summary>
            <value>The angle between 15 and 2.</value>
        </member>
        <member name="P:Dart.DartBoardConstants.AngleBetween16And8">
            <summary>Gets the angle between 16 and 8.</summary>
            <value>The angle between 16 and 8.</value>
        </member>
        <member name="P:Dart.DartBoardConstants.AngleBetween17And3">
            <summary>Gets the angle between 17 and 3.</summary>
            <value>The angle between 17 and 3.</value>
        </member>
        <member name="P:Dart.DartBoardConstants.AngleBetween18And4">
            <summary>Gets the angle between 18 and 4.</summary>
            <value>The angle between 18 and 4.</value>
        </member>
        <member name="P:Dart.DartBoardConstants.AngleBetween19And7">
            <summary>Gets the angle between 19 and 7.</summary>
            <value>The angle between 19 and 7.</value>
        </member>
        <member name="P:Dart.DartBoardConstants.AngleBetween1And18">
            <summary>Gets the angle between 1 and 18.</summary>
            <value>The angle between 1 and 18.</value>
        </member>
        <member name="P:Dart.DartBoardConstants.AngleBetween20And1">
            <summary>Gets the angle between 20 and 1.</summary>
            <value>The angle between 20 and 1.</value>
        </member>
        <member name="P:Dart.DartBoardConstants.AngleBetween2And17">
            <summary>Gets the angle between 2 and 17.</summary>
            <value>The angle between 2 and 17.</value>
        </member>
        <member name="P:Dart.DartBoardConstants.AngleBetween3And19">
            <summary>Gets the angle between 3 and 19.</summary>
            <value>The angle between 3 and 19.</value>
        </member>
        <member name="P:Dart.DartBoardConstants.AngleBetween4And13">
            <summary>Gets the angle between 4 and 13.</summary>
            <value>The angle between 4 and 13.</value>
        </member>
        <member name="P:Dart.DartBoardConstants.AngleBetween5And20">
            <summary>Gets the angle between 5 and 20.</summary>
            <value>The angle between 5 and 20.</value>
        </member>
        <member name="P:Dart.DartBoardConstants.AngleBetween6And10">
            <summary>Gets the angle between 6 and 10.</summary>
            <value>The angle between 6 and 10.</value>
        </member>
        <member name="P:Dart.DartBoardConstants.AngleBetween7And16">
            <summary>Gets the angle between 7 and 16.</summary>
            <value>The angle between 7 and 16.</value>
        </member>
        <member name="P:Dart.DartBoardConstants.AngleBetween8And11">
            <summary>Gets the angle between 8 and 11.</summary>
            <value>The angle between 8 and 11.</value>
        </member>
        <member name="P:Dart.DartBoardConstants.AngleBetween9And12">
            <summary>Gets the angle between 9 and 12.</summary>
            <value>The angle between 9 and 12.</value>
        </member>
        <member name="T:Dart.DartCircleAdorner">
            <summary>The DartCircleAdorner.</summary>
            <seealso cref="T:System.Windows.Documents.Adorner"/>
        </member>
        <member name="M:Dart.DartCircleAdorner.#ctor(System.Windows.UIElement,System.Windows.Point,System.Int32)">
            <summary>Initializes a new instance of the <see cref="T:Dart.DartCircleAdorner"/> class.</summary>
            <param name="adornedElement">The adorned element.</param>
            <param name="actuallyMousePosition">The actually mouse position.</param>
            <param name="actuallyPoints">The actually points.</param>
        </member>
        <member name="P:Dart.DartCircleAdorner.Center">
            <summary>Gets or sets the center.</summary>
            <value>The center.</value>
        </member>
        <member name="M:Dart.DartCircleAdorner.OnRender(System.Windows.Media.DrawingContext)">
            <summary>
            When overridden in a derived class, participates in rendering operations that are directed by the layout system. The rendering
            instructions for this element are not used directly when this method is invoked, and are instead preserved for later asynchronous use by
            layout and drawing.
            </summary>
            <param name="drawingContext">The drawing instructions for a specific element. This context is provided to the layout system.</param>
        </member>
        <member name="M:Dart.DartCircleAdorner.GetDoubleGeometry(System.Windows.Point,System.Windows.Media.Geometry)">
            <summary>Gets the double geometry.</summary>
            <param name="center">The render center.</param>
            <param name="doubleCircle">The double circle.</param>
            <returns>The geometry of the double ring.</returns>
        </member>
        <member name="M:Dart.DartCircleAdorner.GetOuterBullGeometry(System.Windows.Media.Geometry,System.Windows.Media.Geometry)">
            <summary>Gets the outer bull geometry.</summary>
            <param name="circle">The circle.</param>
            <param name="circleToSubtract">The circle to subtract.</param>
            <returns>The geometry of the outer ring.</returns>
        </member>
        <member name="M:Dart.DartCircleAdorner.GetSingleGeometry(System.Windows.Point,System.Windows.Media.Geometry,System.Windows.Media.Geometry,System.Windows.Media.Geometry,System.Windows.Media.Geometry)">
            <summary>Gets the single geometry.</summary>
            <param name="center">The render center.</param>
            <param name="boardCircle">The board circle.</param>
            <param name="bullCircle">The bull circle.</param>
            <param name="tripleCircle">The triple circle.</param>
            <param name="doubleCircle">The double circle.</param>
            <returns>The geometry of the single shape.</returns>
        </member>
        <member name="M:Dart.DartCircleAdorner.GetTripleGeometry(System.Windows.Point,System.Windows.Media.Geometry)">
            <summary>Gets the triple geometry.</summary>
            <param name="center">The render center.</param>
            <param name="tripleCircle">The triple circle.</param>
            <returns>The geometry of the triple circle.</returns>
        </member>
        <member name="T:Dart.ThrowInfo">
            <summary>The throw info.</summary>
            <seealso cref="T:Dart.Common.UserInterface.Helper.NotifyPropertyChanged" />
        </member>
        <member name="M:Dart.ThrowInfo.#ctor(System.Windows.UIElement)">
            <summary>Initializes a new instance of the <see cref="T:Dart.ThrowInfo" /> class.</summary>
            <param name="dartBoardElement">The dart board.</param>
        </member>
        <member name="P:Dart.ThrowInfo.GetCurrentAngle">
            <summary>Gets the current angle.</summary>
            <returns>The angle.</returns>
        </member>
        <member name="P:Dart.ThrowInfo.GetCurrentDistanceBetweenMouseAndCenter">
            <summary>Gets the current distance between mouse and center.</summary>
            <returns>The current distance between mouse and center.</returns>
        </member>
        <member name="P:Dart.ThrowInfo.GetCurrentMousePosition">
            <summary>Gets the current mouse position.</summary>
            <returns>The current mouse position.</returns>
        </member>
        <member name="P:Dart.ThrowInfo.GetDartBoardCenter">
            <summary>Gets the dart board center.</summary>
            <returns>The dart board center.</returns>
        </member>
        <member name="P:Dart.ThrowInfo.GetPointsAtMousePosition">
            <summary>Gets the get points at mouse position.</summary>
            <value>The get points at mouse position.</value>
        </member>
        <member name="P:Dart.ThrowInfo.IsDouble">
            <summary>Gets a value indicating whether this instance is double.</summary>
            <value><c>true</c> if this instance is double; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Dart.ThrowInfo.IsSingle">
            <summary>Gets a value indicating whether this instance is single.</summary>
            <value><c>true</c> if this instance is single; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Dart.ThrowInfo.IsTriple">
            <summary>Gets a value indicating whether this instance is triple.</summary>
            <value><c>true</c> if this instance is triple; otherwise, <c>false</c>.</value>
        </member>
        <member name="M:Dart.ThrowInfo.CalculatePoints(System.Double,System.Double)">
            <summary>Calculates the points.</summary>
            <param name="angle">The angle.</param>
            <param name="distance">The distance.</param>
            <returns>The points.</returns>
        </member>
        <member name="M:Dart.ThrowInfo.CalculateWithMultiplier(System.Int32,System.Double)">
            <summary>Calculates the with multiplier.</summary>
            <param name="segmentPoints">The segment points.</param>
            <param name="distance">The distance.</param>
            <returns>The points with multiplier.</returns>
        </member>
        <member name="T:Dart.IViewModelBase">
            <summary>The IViewModelBase.</summary>
            <seealso cref="T:System.ComponentModel.INotifyPropertyChanged" />
        </member>
        <member name="P:Dart.IViewModelBase.Label">
            <summary>Gets the label.</summary>
            <value>The label.</value>
        </member>
        <member name="M:Dart.IViewModelBase.RaisePropertyChanged(System.String)">
            <summary>Raises the property changed.</summary>
            <param name="propertyName">Name of the property.</param>
        </member>
        <member name="T:Dart.ViewModelBase">
            <summary>The NotifyPropertyChanged.</summary>
            <seealso cref="T:System.ComponentModel.INotifyPropertyChanged" />
        </member>
        <member name="P:Dart.ViewModelBase.AvailableLanguages">
            <summary>Gets the available languages.</summary>
            <value>The available languages.</value>
        </member>
        <member name="T:Dart.IApplicationSettingsViewModel">
            <summary>The application settings view model interface.</summary>
        </member>
        <member name="E:Dart.IApplicationSettingsViewModel.LanguageChangedEvent">
            <summary>Occurs when [language changed event].</summary>
        </member>
        <member name="E:Dart.IApplicationSettingsViewModel.ThemeChangedEvent">
            <summary>Occurs when [theme changed event].</summary>
        </member>
        <member name="P:Dart.IApplicationSettingsViewModel.CurrentApplicationSettings">
            <summary>Gets or sets the current application settings.</summary>
            <value>The current application settings.</value>
        </member>
        <member name="T:Dart.Game.Interfaces.IGameSettingsViewModel">
            <summary>The game settings view model.</summary>
        </member>
        <member name="P:Dart.Game.Interfaces.IGameSettingsViewModel.SelectableStartPoints">
            <summary>Gets the selectable start points.</summary>
            <value>The selectable start points.</value>
        </member>
        <member name="P:Dart.Game.Interfaces.IGameSettingsViewModel.DoubleIn">
            <summary>Gets or sets a value indicating whether [double in].</summary>
            <value><c>true</c> if [double in]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Dart.Game.Interfaces.IGameSettingsViewModel.DoubleOut">
            <summary>Gets or sets a value indicating whether [double out].</summary>
            <value><c>true</c> if [double out]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Dart.Game.Interfaces.IGameSettingsViewModel.SelectedPlayerCount">
            <summary>Gets or sets the selected player count.</summary>
            <value>The selected player count.</value>
        </member>
        <member name="P:Dart.Game.Interfaces.IGameSettingsViewModel.SelectedStartPoints">
            <summary>Gets or sets the selected start points.</summary>
            <value>The selected start points.</value>
        </member>
        <member name="T:Dart.Game.Interfaces.IPlayerViewModel">
            <summary>The view model for a player.</summary>
            <seealso cref="T:System.ComponentModel.INotifyPropertyChanged" />
        </member>
        <member name="P:Dart.Game.Interfaces.IPlayerViewModel.CurrentScore">
            <summary>Gets or sets the current score.</summary>
            <value>The current score.</value>
        </member>
        <member name="P:Dart.Game.Interfaces.IPlayerViewModel.Name">
            <summary>Gets the name.</summary>
            <value>The name.</value>
        </member>
        <member name="T:Dart.Game.UserInterface.Views.DartGameView">
            <summary>Interaction logic for DartGameView.</summary>
            <summary>
            DartGameView
            </summary>
        </member>
        <member name="M:Dart.Game.UserInterface.Views.DartGameView.#ctor">
            <summary>
               Initializes a new instance of the <see cref="T:Dart.Game.UserInterface.Views.DartGameView" /> class.
            </summary>
        </member>
        <member name="P:Dart.Game.UserInterface.Views.DartGameView.CurrentPoints">
            <summary>Gets the current points.</summary>
            <value>The current points.</value>
        </member>
        <member name="M:Dart.Game.UserInterface.Views.DartGameView.DartBoardMouseLeave(System.Object,System.Windows.Input.MouseEventArgs)">
            <summary>Handles the MouseLeave event of the DartBoard control.</summary>
            <param name="sender">The source of the event.</param>
            <param name="e">
               The <see cref="T:System.Windows.Input.MouseEventArgs" /> instance containing the event data.
            </param>
        </member>
        <member name="M:Dart.Game.UserInterface.Views.DartGameView.DartBoardMouseMove(System.Object,System.Windows.Input.MouseEventArgs)">
            <summary>Handles the MouseMove event of the DartBoard control.</summary>
            <param name="sender">The source of the event.</param>
            <param name="e">
               The <see cref="T:System.Windows.Input.MouseEventArgs" /> instance containing the event data.
            </param>
        </member>
        <member name="M:Dart.Game.UserInterface.Views.DartGameView.GetCurrentMousePosition">
            <summary>Gets the current mouse position.</summary>
            <returns>The current mouse position.</returns>
        </member>
        <member name="M:Dart.Game.UserInterface.Views.DartGameView.RenderPointsAdorner(System.Object,System.Windows.Point,System.Int32)">
            <summary>Renders the points adorner.</summary>
            <param name="sender">The sender.</param>
            <param name="actuallyMousePosition">The actually mouse position.</param>
            <param name="actuallyPoints">The actually points.</param>
        </member>
        <member name="M:Dart.Game.UserInterface.Views.DartGameView.ShowDevUiData">
            <summary>Shows the development UI data.</summary>
        </member>
        <member name="M:Dart.Game.UserInterface.Views.DartGameView.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Dart.Game.UserInterface.Views.GameOptionsView">
            <summary>The GameOptionsView.</summary>
            <seealso cref="T:System.Windows.Controls.UserControl" />
            <seealso cref="T:System.Windows.Markup.IComponentConnector" />
            <summary>
            GameOptionsView
            </summary>
        </member>
        <member name="M:Dart.Game.UserInterface.Views.GameOptionsView.#ctor">
            <summary>
               Initializes a new instance of the <see cref="T:Dart.Game.UserInterface.Views.GameOptionsView" /> class.
            </summary>
        </member>
        <member name="M:Dart.Game.UserInterface.Views.GameOptionsView.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Dart.Game.UserInterface.Views.GameSettingsView">
            <summary>The GameSettingsView.</summary>
            <seealso cref="T:System.Windows.Controls.UserControl" />
            <seealso cref="T:System.Windows.Markup.IComponentConnector" />
            <summary>
            GameSettingsView
            </summary>
        </member>
        <member name="M:Dart.Game.UserInterface.Views.GameSettingsView.#ctor">
            <summary>
               Initializes a new instance of the <see cref="T:Dart.Game.UserInterface.Views.GameSettingsView" /> class.
            </summary>
        </member>
        <member name="M:Dart.Game.UserInterface.Views.GameSettingsView.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Dart.Game.UserInterface.Views.PlayerlistView">
            <summary>The Player list view.</summary>
            <seealso cref="T:System.Windows.Controls.UserControl" />
            <seealso cref="T:System.Windows.Markup.IComponentConnector" />
            <summary>
            PlayerlistView
            </summary>
        </member>
        <member name="M:Dart.Game.UserInterface.Views.PlayerlistView.#ctor">
            <summary>
               Initializes a new instance of the <see cref="T:Dart.Game.UserInterface.Views.PlayerlistView" /> class.
            </summary>
        </member>
        <member name="M:Dart.Game.UserInterface.Views.PlayerlistView.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Dart.Game.UserInterface.Views.PlayerView">
            <summary>The PlayerView.</summary>
            <seealso cref="T:System.Windows.Controls.UserControl" />
            <seealso cref="T:System.Windows.Markup.IComponentConnector" />
            <summary>
            PlayerView
            </summary>
        </member>
        <member name="M:Dart.Game.UserInterface.Views.PlayerView.#ctor">
            <summary>Initializes a new instance of the <see cref="T:Dart.Game.UserInterface.Views.PlayerView" /> class.</summary>
        </member>
        <member name="M:Dart.Game.UserInterface.Views.PlayerView.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Dart.IMainWindowViewModel">
            <summary>The main window view model interface.</summary>
            <seealso cref="T:Dart.IViewModelBase" />
        </member>
        <member name="E:Dart.IMainWindowViewModel.GameStarted">
            <summary>Occurs when [game started].</summary>
        </member>
        <member name="P:Dart.IMainWindowViewModel.ConfiguredGameOptions">
            <summary>Gets or sets the configured game options.</summary>
            <value>The configured game options.</value>
        </member>
        <member name="P:Dart.IMainWindowViewModel.SettingsViewModel">
            <summary>Gets the settings view model.</summary>
            <value>The settings view model.</value>
        </member>
        <member name="T:Dart.DartGameViewModel">
            <summary>The DartGameViewModel.</summary>
            <seealso cref="T:Dart.ViewModelBase" />
        </member>
        <member name="M:Dart.DartGameViewModel.#ctor(Dart.IViewModelBase)">
            <summary>
               Initializes a new instance of the <see cref="T:Dart.DartGameViewModel" /> class.
            </summary>
            <param name="owner">The owner.</param>
        </member>
        <member name="P:Dart.DartGameViewModel.Label">
            <summary>Gets the label.</summary>
            <value>The label.</value>
        </member>
        <member name="P:Dart.DartGameViewModel.CurrentPointsUnderMouse">
            <summary>Gets or sets the current points under mouse.</summary>
            <value>The current points under mouse.</value>
        </member>
        <member name="P:Dart.DartGameViewModel.DartThrown">
            <summary>Gets the dart thrown.</summary>
            <value>The dart thrown.</value>
        </member>
        <member name="P:Dart.DartGameViewModel.Game">
            <summary>Gets the game.</summary>
            <value>The game.</value>
        </member>
        <member name="P:Dart.DartGameViewModel.MainWindowViewModel">
            <summary>Gets or sets the main window view model.</summary>
            <value>The main window view model.</value>
        </member>
        <member name="P:Dart.DartGameViewModel.Players">
            <summary>Gets the players.</summary>
            <value>The players.</value>
        </member>
        <member name="M:Dart.DartGameViewModel.Thrown">
            <summary>Thrown this instance.</summary>
        </member>
        <member name="M:Dart.DartGameViewModel.UpdatePlayers">
            <summary>Updates this instance.</summary>
        </member>
        <member name="M:Dart.DartGameViewModel.SetPlayers">
            <summary>Sets the players.</summary>
        </member>
        <member name="T:Dart.GameOptionsViewModel">
            <summary>The GameOptionsViewModel.</summary>
        </member>
        <member name="M:Dart.GameOptionsViewModel.#ctor">
            <summary>
               Initializes a new instance of the <see cref="T:Dart.GameOptionsViewModel" /> class.
            </summary>
        </member>
        <member name="P:Dart.GameOptionsViewModel.GameSettings">
            <summary>Gets or sets the game settings.</summary>
            <value>The game settings.</value>
        </member>
        <member name="P:Dart.GameOptionsViewModel.Label">
            <summary>Gets the label.</summary>
            <value>The label.</value>
        </member>
        <member name="P:Dart.GameOptionsViewModel.PlayerlistViewModel">
            <summary>Gets or sets the player list view model.</summary>
            <value>The player list view model.</value>
        </member>
        <member name="T:Dart.GameSettingsViewModel">
            <summary>The GameSettingsViewModel.</summary>
        </member>
        <member name="M:Dart.GameSettingsViewModel.#ctor">
            <summary>
               Initializes a new instance of the <see cref="T:Dart.GameSettingsViewModel" /> class.
            </summary>
        </member>
        <member name="P:Dart.GameSettingsViewModel.DoubleIn">
            <summary>Gets or sets a value indicating whether [double in].</summary>
            <value><c>true</c> if [double in]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Dart.GameSettingsViewModel.DoubleOut">
            <summary>Gets or sets a value indicating whether [double out].</summary>
            <value><c>true</c> if [double out]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Dart.GameSettingsViewModel.SelectableStartPoints">
            <summary>Gets the selectable start points.</summary>
            <value>The selectable start points.</value>
        </member>
        <member name="P:Dart.GameSettingsViewModel.SelectedPlayerCount">
            <summary>Gets or sets the selected player count.</summary>
            <value>The selected player count.</value>
        </member>
        <member name="P:Dart.GameSettingsViewModel.SelectedStartPoints">
            <summary>Gets or sets the selected start points.</summary>
            <value>The selected start points.</value>
        </member>
        <member name="T:Dart.MainWindowViewModel">
            <summary>The MainWindowViewModel.</summary>
        </member>
        <member name="M:Dart.MainWindowViewModel.#ctor">
            <summary>
               Initializes a new instance of the <see cref="T:Dart.MainWindowViewModel" /> class.
            </summary>
        </member>
        <member name="E:Dart.MainWindowViewModel.GameStarted">
            <summary>Occurs when [game started].</summary>
        </member>
        <member name="P:Dart.MainWindowViewModel.ConfiguredGameOptions">
            <summary>Gets or sets the configured game options.</summary>
            <value>The configured game options.</value>
        </member>
        <member name="P:Dart.MainWindowViewModel.CurrentContent">
            <summary>Gets or sets the content of the current.</summary>
            <value>The content of the current.</value>
        </member>
        <member name="P:Dart.MainWindowViewModel.CurrentProperties">
            <summary>Gets the properties.</summary>
            <value>The properties.</value>
        </member>
        <member name="P:Dart.MainWindowViewModel.PlugIns">
            <summary>Gets or sets the plug ins.</summary>
            <value>The plug ins.</value>
        </member>
        <member name="P:Dart.MainWindowViewModel.SettingsViewModel">
            <summary>Gets the settings view model.</summary>
            <value>The settings view model.</value>
        </member>
        <member name="P:Dart.MainWindowViewModel.StartGame">
            <summary>Gets the start game.</summary>
            <value>The start game.</value>
        </member>
        <member name="M:Dart.MainWindowViewModel.SetCulture(System.Globalization.CultureInfo)">
            <summary>Sets the culture.</summary>
        </member>
        <member name="M:Dart.MainWindowViewModel.Clone">
            <summary>Creates a new object that is a copy of the current instance.</summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="M:Dart.MainWindowViewModel.ShowLoadDialog">
            <summary>Shows the load dialog.</summary>
        </member>
        <member name="M:Dart.MainWindowViewModel.ShowSaveDialog">
            <summary>Shows the save dialog.</summary>
        </member>
        <member name="M:Dart.MainWindowViewModel.ShowQuitDialog">
            <summary>Shows the quit dialog.</summary>
        </member>
        <member name="M:Dart.MainWindowViewModel.CreateCurrentGameOptions">
            <summary>Creates the current game options.</summary>
            <returns>The current game options.</returns>
        </member>
        <member name="M:Dart.MainWindowViewModel.GetSettings">
            <summary>Gets the current settings.</summary>
            <returns>The current applications settings.</returns>
        </member>
        <member name="M:Dart.MainWindowViewModel.StartDartGame">
            <summary>Starts the dart game.</summary>
        </member>
        <member name="T:Dart.PlayerlistViewModel">
            <summary>The Player list ViewModel.</summary>
        </member>
        <member name="M:Dart.PlayerlistViewModel.#ctor(Dart.GameSettingsViewModel)">
            <summary>Initializes a new instance of the <see cref="T:Dart.PlayerlistViewModel"/> class.</summary>
            <param name="gameSettingsViewModel">The game settings view model.</param>
        </member>
        <member name="P:Dart.PlayerlistViewModel.Playerlist">
            <summary>Gets or sets the player list.</summary>
            <value>The player list.</value>
        </member>
        <member name="M:Dart.PlayerlistViewModel.GameSettingsViewModel_PropertyChanged(System.Object,System.ComponentModel.PropertyChangedEventArgs)">
            <summary>Handles the PropertyChanged event of the GameSettingsViewModel control.</summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.ComponentModel.PropertyChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Dart.PlayerlistViewModel.SetupPlayerlist(System.Int32)">
            <summary>Creates the player list.</summary>
            <param name="playerCount">The player count.</param>
            <returns>The Player list.</returns>
        </member>
        <member name="T:Dart.PlayerViewModel">
            <summary>The PlayerViewModel.</summary>
        </member>
        <member name="M:Dart.PlayerViewModel.#ctor(System.String)">
            <summary>
               Initializes a new instance of the <see cref="T:Dart.PlayerViewModel" /> class.
            </summary>
            <param name="name">The name.</param>
        </member>
        <member name="M:Dart.PlayerViewModel.#ctor(Schuermann.Darts.GameCore.Game.IPlayer)">
            <summary>
               Initializes a new instance of the <see cref="T:Dart.PlayerViewModel" /> class.
            </summary>
            <param name="player">The player.</param>
        </member>
        <member name="P:Dart.PlayerViewModel.CurrentScore">
            <summary>Gets or sets the current score.</summary>
            <value>The current score.</value>
        </member>
        <member name="P:Dart.PlayerViewModel.Name">
            <summary>Gets or sets the name.</summary>
            <value>The name.</value>
        </member>
        <member name="T:Dart.MainWindowView">
            <summary>The MainWindow.</summary>
            <seealso cref="T:System.Windows.Window" />
            <seealso cref="T:System.Windows.Markup.IComponentConnector" />
            <summary>
            MainWindowView
            </summary>
        </member>
        <member name="M:Dart.MainWindowView.#ctor">
            <summary>
               Initializes a new instance of the <see cref="T:Dart.MainWindowView" /> class.
            </summary>
        </member>
        <member name="M:Dart.MainWindowView.OnClosing(System.ComponentModel.CancelEventArgs)">
            <summary>Raises the <see cref="E:System.Windows.Window.Closing" /> event.</summary>
            <param name="e">
               A <see cref="T:System.ComponentModel.CancelEventArgs" /> that contains the event data.
            </param>
        </member>
        <member name="M:Dart.MainWindowView.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Dart.ToolBarView">
            <summary>Interaction logic for ToolBarView.</summary>
            <summary>
            ToolBarView
            </summary>
        </member>
        <member name="M:Dart.ToolBarView.#ctor">
            <summary>Initializes a new instance of the <see cref="T:Dart.ToolBarView"/> class.</summary>
        </member>
        <member name="M:Dart.ToolBarView.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Dart.Properties.Resources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Dart.Properties.Resources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Dart.Properties.Resources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:Dart.Properties.Resources.About">
            <summary>
              Looks up a localized string similar to About.
            </summary>
        </member>
        <member name="P:Dart.Properties.Resources.AcceptChanges">
            <summary>
              Looks up a localized string similar to Accept changes?.
            </summary>
        </member>
        <member name="P:Dart.Properties.Resources.AcceptChangesInfo">
            <summary>
              Looks up a localized string similar to Should changes acceped?.
            </summary>
        </member>
        <member name="P:Dart.Properties.Resources.Cancel">
            <summary>
              Looks up a localized string similar to Cancel.
            </summary>
        </member>
        <member name="P:Dart.Properties.Resources.Close">
            <summary>
              Looks up a localized string similar to Close.
            </summary>
        </member>
        <member name="P:Dart.Properties.Resources.CloseText">
            <summary>
              Looks up a localized string similar to Really want to close the dart application?.
            </summary>
        </member>
        <member name="P:Dart.Properties.Resources.CopyrightText">
            <summary>
              Looks up a localized string similar to Copyright Marc Schürmann.
            </summary>
        </member>
        <member name="P:Dart.Properties.Resources.Dart">
            <summary>
              Looks up a localized string similar to darts.
            </summary>
        </member>
        <member name="P:Dart.Properties.Resources.dartboard">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Dart.Properties.Resources.darts_splashscreen">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Dart.Properties.Resources.DoubleInActive">
            <summary>
              Looks up a localized string similar to DoubleIn active.
            </summary>
        </member>
        <member name="P:Dart.Properties.Resources.DoubleInDeactive">
            <summary>
              Looks up a localized string similar to DoubleIn deactive.
            </summary>
        </member>
        <member name="P:Dart.Properties.Resources.DoubleOutActive">
            <summary>
              Looks up a localized string similar to DoubleOut active.
            </summary>
        </member>
        <member name="P:Dart.Properties.Resources.DoubleOutDeactive">
            <summary>
              Looks up a localized string similar to DoubleOut deactive.
            </summary>
        </member>
        <member name="P:Dart.Properties.Resources.English">
            <summary>
              Looks up a localized string similar to English.
            </summary>
        </member>
        <member name="P:Dart.Properties.Resources.ExceptionCatchWindowHeader">
            <summary>
              Looks up a localized string similar to Opps! Something went wrong, sorry!.
            </summary>
        </member>
        <member name="P:Dart.Properties.Resources.Exit">
            <summary>
              Looks up a localized string similar to Exit.
            </summary>
        </member>
        <member name="P:Dart.Properties.Resources.exitImage">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:Dart.Properties.Resources.extensionImage">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:Dart.Properties.Resources.Extensions">
            <summary>
              Looks up a localized string similar to Extensions.
            </summary>
        </member>
        <member name="P:Dart.Properties.Resources.Finish">
            <summary>
              Looks up a localized string similar to Finish.
            </summary>
        </member>
        <member name="P:Dart.Properties.Resources.German">
            <summary>
              Looks up a localized string similar to German.
            </summary>
        </member>
        <member name="P:Dart.Properties.Resources.GlobalGameSettings">
            <summary>
              Looks up a localized string similar to Global game settings.
            </summary>
        </member>
        <member name="P:Dart.Properties.Resources.helpImage">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:Dart.Properties.Resources.LanguageSelection">
            <summary>
              Looks up a localized string similar to Language selection.
            </summary>
        </member>
        <member name="P:Dart.Properties.Resources.Playercount">
            <summary>
              Looks up a localized string similar to Playercount:.
            </summary>
        </member>
        <member name="P:Dart.Properties.Resources.Reset">
            <summary>
              Looks up a localized string similar to Reset.
            </summary>
        </member>
        <member name="P:Dart.Properties.Resources.resetImage">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:Dart.Properties.Resources.Restart">
            <summary>
              Looks up a localized string similar to Restart?.
            </summary>
        </member>
        <member name="P:Dart.Properties.Resources.RestartGame">
            <summary>
              Looks up a localized string similar to Restart the current game?.
            </summary>
        </member>
        <member name="P:Dart.Properties.Resources.RestartInfo">
            <summary>
              Looks up a localized string similar to The application has to be restartet to assume the chang of the language. Restart the application?.
            </summary>
        </member>
        <member name="P:Dart.Properties.Resources.Save">
            <summary>
              Looks up a localized string similar to Save....
            </summary>
        </member>
        <member name="P:Dart.Properties.Resources.Settings">
            <summary>
              Looks up a localized string similar to Settings.
            </summary>
        </member>
        <member name="P:Dart.Properties.Resources.settingsImage">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:Dart.Properties.Resources.ShowUserInterfaceDartBoardData">
            <summary>
              Looks up a localized string similar to Show dart board UI data?.
            </summary>
        </member>
        <member name="P:Dart.Properties.Resources.Start">
            <summary>
              Looks up a localized string similar to Start.
            </summary>
        </member>
        <member name="P:Dart.Properties.Resources.Startpoints">
            <summary>
              Looks up a localized string similar to Startpoints:.
            </summary>
        </member>
        <member name="P:Dart.Properties.Resources.Throwgame">
            <summary>
              Looks up a localized string similar to Throwgame.
            </summary>
        </member>
        <member name="P:Dart.Properties.Resources.Version">
            <summary>
              Looks up a localized string similar to version.
            </summary>
        </member>
        <member name="P:Dart.Properties.Resources.View">
            <summary>
              Looks up a localized string similar to View.
            </summary>
        </member>
        <member name="T:Dart.Settings.ApplicationSettings">
            <summary>The ApplicationSettings.</summary>
        </member>
        <member name="P:Dart.Settings.ApplicationSettings.CurrentTheme">
            <summary>Gets or sets the current theme.</summary>
            <value>The current theme.</value>
        </member>
        <member name="P:Dart.Settings.ApplicationSettings.SelectedCultureInfo">
            <summary>Gets or sets the selected culture information.</summary>
            <value>The selected culture information.</value>
        </member>
        <member name="P:Dart.Settings.ApplicationSettings.ShowUserInterfaceDartBoardData">
            <summary>Gets or sets a value indicating whether [show user interface dart board data].</summary>
            <value><c>true</c> if [show user interface dart board data]; otherwise, <c>false</c>.</value>
        </member>
        <member name="M:Dart.Settings.ApplicationSettings.op_Inequality(Dart.Settings.ApplicationSettings,Dart.Settings.Interfaces.IApplicationSettings)">
            <summary>Implements the operator !=.</summary>
            <param name="appSettings1">The application settings1.</param>
            <param name="appSettings2">The application settings2.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Dart.Settings.ApplicationSettings.op_Equality(Dart.Settings.ApplicationSettings,Dart.Settings.Interfaces.IApplicationSettings)">
            <summary>Implements the operator ==.</summary>
            <param name="appSettings1">The application settings1.</param>
            <param name="appSettings2">The application settings2.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Dart.Settings.ApplicationSettings.Equals(System.Object)">
            <summary>Determines whether the specified <see cref="T:System.Object"/>, is equal to this instance.</summary>
            <param name="obj">The <see cref="T:System.Object"/> to compare with this instance.</param>
            <returns><c>true</c> if the specified <see cref="T:System.Object"/> is equal to this instance; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Dart.Settings.ApplicationSettings.Equals(Dart.Settings.Interfaces.IApplicationSettings)">
            <summary>Equals the specified to compare.</summary>
            <param name="settingsToCompare">To compare.</param>
            <returns>True if equal.</returns>
        </member>
        <member name="M:Dart.Settings.ApplicationSettings.GetHashCode">
            <summary>Returns a hash code for this instance.</summary>
            <returns>A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table.</returns>
        </member>
        <member name="T:Dart.Settings.Interfaces.IApplicationSettings">
            <summary>The application settings interface.</summary>
        </member>
        <member name="P:Dart.Settings.Interfaces.IApplicationSettings.CurrentTheme">
            <summary>Gets or sets the current theme.</summary>
            <value>The current theme.</value>
        </member>
        <member name="P:Dart.Settings.Interfaces.IApplicationSettings.SelectedCultureInfo">
            <summary>Gets or sets the selected culture information.</summary>
            <value>The selected culture information.</value>
        </member>
        <member name="P:Dart.Settings.Interfaces.IApplicationSettings.ShowUserInterfaceDartBoardData">
            <summary>
               Gets or sets a value indicating whether [show user interface dart board data].
            </summary>
            <value>
               <c>true</c> if [show user interface dart board data]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:Dart.Settings.Interfaces.IApplicationSettings.Equals(Dart.Settings.Interfaces.IApplicationSettings)">
            <summary>Equals the specified to compare.</summary>
            <param name="settingsToCompare">To compare.</param>
            <returns>True or false.</returns>
        </member>
        <member name="T:Dart.ApplicationSettingsViewModel">
            <summary>The SettingsViewModel.</summary>
            <seealso cref="T:Dart.ViewModelBase" />
        </member>
        <member name="M:Dart.ApplicationSettingsViewModel.#ctor(Dart.Settings.Interfaces.IApplicationSettings)">
            <summary>
               Initializes a new instance of the <see cref="T:Dart.ApplicationSettingsViewModel" /> class.
            </summary>
            <param name="applicationSettings">The application settings.</param>
        </member>
        <member name="T:Dart.ApplicationSettingsViewModel.LanguageChangedEventHaendler">
            <summary>The language changed event heandler.</summary>
            <param name="sender">The sender.</param>
            <param name="args">
               The <see cref="T:System.EventArgs" /> instance containing the event data.
            </param>
        </member>
        <member name="T:Dart.ApplicationSettingsViewModel.ThemeChangedEventHaendler">
            <summary>The theme changed event heandler.</summary>
            <param name="sender">The sender.</param>
            <param name="args">
               The <see cref="T:System.EventArgs" /> instance containing the event data.
            </param>
        </member>
        <member name="E:Dart.ApplicationSettingsViewModel.LanguageChangedEvent">
            <summary>Occurs when [language changed event].</summary>
        </member>
        <member name="E:Dart.ApplicationSettingsViewModel.ThemeChangedEvent">
            <summary>Occurs when [theme changed event].</summary>
        </member>
        <member name="P:Dart.ApplicationSettingsViewModel.Label">
            <summary>Gets the label.</summary>
            <value>The label.</value>
        </member>
        <member name="P:Dart.ApplicationSettingsViewModel.AllThemes">
            <summary>Gets all themes.</summary>
            <value>All themes.</value>
        </member>
        <member name="P:Dart.ApplicationSettingsViewModel.CurrentApplicationSettings">
            <summary>Gets or sets the current application settings.</summary>
            <value>The current application settings.</value>
        </member>
        <member name="P:Dart.ApplicationSettingsViewModel.CurrentTheme">
            <summary>Gets or sets the current theme.</summary>
            <value>The current theme.</value>
        </member>
        <member name="P:Dart.ApplicationSettingsViewModel.SelectedCultureInfo">
            <summary>Gets or sets the selected culture information.</summary>
            <value>The selected culture information.</value>
        </member>
        <member name="P:Dart.ApplicationSettingsViewModel.ShowUserInterfaceDartBoardData">
            <summary>
               Gets or sets a value indicating whether [show user interface dart board data].
            </summary>
            <value>
               <c>true</c> if [show user interface dart board data]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:Dart.ApplicationSettingsViewModel.Accept">
            <summary>Accepts this instance.</summary>
        </member>
        <member name="M:Dart.ApplicationSettingsViewModel.CancelApplicationSettings(System.Windows.Window)">
            <summary>Cancels the application settings.</summary>
            <param name="window">The window.</param>
        </member>
        <member name="T:Dart.ApplicationSettingsView">
            <summary>Interaction logic for SettingsView.</summary>
            <summary>
            ApplicationSettingsView
            </summary>
        </member>
        <member name="M:Dart.ApplicationSettingsView.#ctor">
            <summary>
               Initializes a new instance of the <see cref="T:Dart.ApplicationSettingsView" /> class.
            </summary>
        </member>
        <member name="M:Dart.ApplicationSettingsView.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Dart.Tools.DevelopmentPropertiesView">
            <summary>Interaction logic for DartBoardData.</summary>
            <summary>
            DevelopmentPropertiesView
            </summary>
        </member>
        <member name="M:Dart.Tools.DevelopmentPropertiesView.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Dart.Tools.DevelopmentPropertiesView"/> class.
            </summary>
        </member>
        <member name="M:Dart.Tools.DevelopmentPropertiesView.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Dart.Tools.ExceptionHandling.ExceptionCatchWindow">
            <summary>Interaction logic for ExceptionCatchWindow.xaml</summary>
            <summary>
            ExceptionCatchWindow
            </summary>
        </member>
        <member name="M:Dart.Tools.ExceptionHandling.ExceptionCatchWindow.#ctor(System.UnhandledExceptionEventArgs)">
            <summary>
               Initializes a new instance of the <see cref="T:Dart.Tools.ExceptionHandling.ExceptionCatchWindow" /> class.
            </summary>
            <param name="e">
               The <see cref="T:System.UnhandledExceptionEventArgs" /> instance containing the event data.
            </param>
        </member>
        <member name="M:Dart.Tools.ExceptionHandling.ExceptionCatchWindow.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Dart.Tools.IconSetter">
            <summary>The icon setter class.</summary>
        </member>
        <member name="M:Dart.Tools.IconSetter.SetProgramsIcon">
            <summary>Sets the programs icon.</summary>
        </member>
        <member name="T:Dart.Tools.Logging.ILogProvider">
            <summary>The logger provider</summary>
        </member>
        <member name="P:Dart.Tools.Logging.ILogProvider.LogFile">
            <summary>Gets the log file.</summary>
            <value>The log file.</value>
        </member>
        <member name="M:Dart.Tools.Logging.ILogProvider.GetLogger``1">
            <summary>Gets the logger.</summary>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Dart.Tools.Logging.ILogProvider.GetLogger(System.String)">
            <summary>Gets the logger.</summary>
            <param name="category">The category.</param>
            <returns></returns>
        </member>
        <member name="T:Dart.Tools.Logging.LogProvider">
            <summary>The logger provider.</summary>
            <seealso cref="T:Dart.Tools.Logging.ILogProvider" />
        </member>
        <member name="M:Dart.Tools.Logging.LogProvider.#ctor">
            <summary>Initializes a new instance of the <see cref="T:Dart.Tools.Logging.LogProvider" /> class.</summary>
        </member>
        <member name="P:Dart.Tools.Logging.LogProvider.LogFile">
            <summary>Gets the log file.</summary>
            <value>The log file.</value>
        </member>
        <member name="M:Dart.Tools.Logging.LogProvider.GetLogger``1">
            <summary>Gets the logger.</summary>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Dart.Tools.Logging.LogProvider.GetLogger(System.String)">
            <summary>Gets the logger.</summary>
            <param name="category">The category.</param>
            <returns></returns>
        </member>
        <member name="T:Game.App">
            <summary>
            App
            </summary>
        </member>
        <member name="M:Game.App.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="M:Game.App.Main">
            <summary>
            Application Entry Point.
            </summary>
        </member>
        <member name="T:XamlGeneratedNamespace.GeneratedInternalTypeHelper">
            <summary>
            GeneratedInternalTypeHelper
            </summary>
        </member>
        <member name="M:XamlGeneratedNamespace.GeneratedInternalTypeHelper.CreateInstance(System.Type,System.Globalization.CultureInfo)">
            <summary>
            CreateInstance
            </summary>
        </member>
        <member name="M:XamlGeneratedNamespace.GeneratedInternalTypeHelper.GetPropertyValue(System.Reflection.PropertyInfo,System.Object,System.Globalization.CultureInfo)">
            <summary>
            GetPropertyValue
            </summary>
        </member>
        <member name="M:XamlGeneratedNamespace.GeneratedInternalTypeHelper.SetPropertyValue(System.Reflection.PropertyInfo,System.Object,System.Object,System.Globalization.CultureInfo)">
            <summary>
            SetPropertyValue
            </summary>
        </member>
        <member name="M:XamlGeneratedNamespace.GeneratedInternalTypeHelper.CreateDelegate(System.Type,System.Object,System.String)">
            <summary>
            CreateDelegate
            </summary>
        </member>
        <member name="M:XamlGeneratedNamespace.GeneratedInternalTypeHelper.AddEventHandler(System.Reflection.EventInfo,System.Object,System.Delegate)">
            <summary>
            AddEventHandler
            </summary>
        </member>
    </members>
</doc>
